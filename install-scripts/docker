#!/usr/bin/bash

# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install -y ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Docker post-install
echo fs.inotify.max_user_instances=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
sudo groupadd docker
sudo usermod -aG docker ${USER}
mkdir -p /home/"${USER}"/.docker
sudo chown "${USER}":"${USER}" /home/"${USER}"/.docker -R
sudo systemctl enable docker.service
sudo systemctl enable containerd.service

# Cleanup cronjob
# prune_job="0 0 * * 7 docker system prune -a -f >> /var/log/docker-prune.log 2>&1"

# Check if the cron job already exists
# (crontab -l 2>/dev/null | grep -F "$prune_job") >/dev/null

# if [ $? -eq 0 ]; then
#   echo "Prune job already exists."
# else
#   # Add the cron job
#   (crontab -l 2>/dev/null; echo "$prune_job") | crontab -
#   echo "Prune job added successfully."
# fi
